{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","toggleReverse","reset","this","goods","visibleGoods","sort","a","b","length","localeCompare","Error","reverse","console","log","getReorderedGoods","sortAphabetClassName","classNames","sortLengthClassName","reverseClassName","resetClassName","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZJ,SAAUJ,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZJ,SAAUJ,EAASW,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBApBzB,EAwBEO,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KA3BlB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZS,EAvEH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKJ,EAASW,OACZK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzC,MAEF,KAAKpB,EAASS,SACZO,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,cAAcF,MAC5C,MAEF,KAAKnB,EAASK,KACZ,MAEF,QACE,MAAM,IAAIiB,MAAM,wBAUpB,OAPIhB,GACFU,EAAaO,UAIfC,QAAQC,IAAIrB,EAAUE,GAEfU,EA0CSU,CAAkBzB,EAAiB,CAC/CG,WACAE,eAGIqB,EAAuBC,IAAW,iBAAkB,CACxD,WAAYd,KAAKX,MAAMC,WAAaJ,EAASS,WAGzCoB,EAAsBD,IAAW,oBAAqB,CAC1D,WAAYd,KAAKX,MAAMC,WAAaJ,EAASW,SAGzCmB,EAAmBF,IACvB,oBACA,CAAE,WAAYtB,IAGVyB,EAAiBH,IACrB,4BACA,CACE,YACA3B,EAAgB,KAAOc,EAAM,KAIjC,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWL,EACXO,QAASpB,KAAKP,eAHhB,iCAQA,wBACE0B,KAAK,SACLD,UAAWH,EACXK,QAASpB,KAAKJ,aAHhB,4BAQA,wBACEuB,KAAK,SACLD,UAAWF,EACXI,QAASpB,KAAKF,cAHhB,qBAQA,wBACEqB,KAAK,SACLD,UAAWD,EACXG,QAASpB,KAAKD,MAHhB,sBASF,6BACE,6BACGE,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAnGvB,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.941bbb61.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      throw new Error('something went wrong');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  toggleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n\n    const sortAphabetClassName = classNames('button is-info', {\n      'is-light': this.state.sortType !== SortType.ALPHABET,\n    });\n\n    const sortLengthClassName = classNames('button is-success', {\n      'is-light': this.state.sortType !== SortType.LENGTH,\n    });\n\n    const reverseClassName = classNames(\n      'button is-warning',\n      { 'is-light': isReversed },\n    );\n\n    const resetClassName = classNames(\n      'button is-danger is-light',\n      {\n        'is-hidden':\n        goodsFromServer[1] === goods[1],\n      },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortAphabetClassName}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortLengthClassName}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverseClassName}\n            onClick={this.toggleReverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className={resetClassName}\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}